{"version":3,"file":"component---src-pages-books-js-90bfbe872ab80fa83cf2.js","mappings":"sbACWA,EAAQ,iCACRC,EAAsB,+CACtBC,EAAuB,gDACvBC,EAAuB,gDACvBC,EAAY,qCACZC,EAAwB,iDACxBC,EAAc,uCAEdC,EAAoB,6CCmC/B,EAtCiB,SAACC,GAChB,IAAQC,EAASD,EAATC,KAER,OACE,uBAAKC,UAAWC,GACd,uBAAKD,UAAWC,GACd,gBAAC,EAAAC,KAAD,CAAMC,GAAIJ,EAAKK,YAAYC,KAAMC,gBAAiBL,EAAAA,OAAmBD,UAAWC,GAC9E,sBAAID,UAAWC,GAAmBF,EAAKK,YAAYd,QAErD,uBAAKU,UAAWC,GACbF,EAAKK,YAAYG,OAAOC,QAAQ,GAAK,SAK1C,uBAAKR,UAAWC,KACXF,EAAKK,YAAYK,QAAU,uBAAKT,UAAWC,EAAAA,aAAyB,OAASF,EAAKK,YAAYK,QACjG,uBAAKT,UAAWC,GAAhB,KACA,uBAAKD,UAAWC,EAAAA,WAAuB,aAAeF,EAAKK,YAAYM,OAGzE,6BAEGX,EAAKK,YAAYO,aAAe,2BAAMZ,EAAKK,YAAYO,YAAvB,OAGnC,gBAAC,EAAAT,KAAD,CAAMC,GAAIJ,EAAKK,YAAYC,KAAMC,gBAAiBL,EAAAA,OAAmBD,UAAWC,GAAhF,eCGN,EA5BkB,SAAC,GAIZ,IACCW,EADF,EAHJC,KACEC,kBAAqBC,MAIpBC,QAAO,SAAAC,GAAI,QAAMA,EAAKC,KAAKd,YAAYM,QACvCS,KAAI,SAAAF,GAAI,OAAI,gBAAC,EAAD,CAAUG,IAAKH,EAAKC,KAAKG,GAAItB,KAAMkB,EAAKC,KAAMI,KAAM,YAEjE,OACE,gBAAC,IAAD,CACEhC,MAAM,eACNiC,KAAK,QACLC,MAAM,8FACNC,aAAa,iBAEb,gBAAC,IAAD,CAAKnC,MAAM,eACX,uBAAKU,UAAU,iBACb,yMACA,2BACC,uBAAK0B,MAAO,CAACC,aAAa,SACxBf","sources":["webpack://gatsby-starter-default/./src/components/books/book-list.module.css","webpack://gatsby-starter-default/./src/components/books/book-list.js","webpack://gatsby-starter-default/./src/pages/books.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var title = \"book-list-module--title--1BBZ8\";\nexport var book_post_container = \"book-list-module--book_post_container--282g3\";\nexport var book_title_container = \"book-list-module--book_title_container--34zj_\";\nexport var book_title_link_cell = \"book-list-module--book_title_link_cell--1SUDx\";\nexport var read_more = \"book-list-module--read_more--JzzIg\";\nexport var author_date_container = \"book-list-module--author_date_container--uscSw\";\nexport var book_rating = \"book-list-module--book_rating--2Rvly\";\nexport var blogtag = \"book-list-module--blogtag--2w393\";\nexport var book_date_divider = \"book-list-module--book_date_divider--2-Fvc\";","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport * as bookStyles from \"./book-list.module.css\"\nimport { GoTag } from 'react-icons/go'\n\n\nconst BookList = (props) => {\n  const { post } = props;\n\n  return (\n    <div className={bookStyles.book_post_container}>\n      <div className={bookStyles.book_title_container}>\n        <Link to={post.frontmatter.path} activeClassName={bookStyles.active} className={bookStyles.book_title_link_cell}>\n          <h2 className={bookStyles.title}>{post.frontmatter.title}</h2>\n        </Link>\n        <div className={bookStyles.book_rating}>\n          {post.frontmatter.rating.toFixed(1) + \" / 5\"}\n        </div>\n      \n      </div>\n\n      <div className={bookStyles.author_date_container}>\n        {!!post.frontmatter.author && <div className={bookStyles.book_author}>{\"By: \" + post.frontmatter.author}</div>}\n        <div className={bookStyles.book_date_divider}>|</div>\n        <div className={bookStyles.book_date}>{\"Finished: \" + post.frontmatter.date}</div>\n      </div>\n\n      <hr/>\n\n      {!!post.frontmatter.description && <div>{post.frontmatter.description}...</div>}\n\n\n      <Link to={post.frontmatter.path} activeClassName={bookStyles.active} className={bookStyles.read_more}>\n          Read more\n      </Link>\n\n      \n      {/* <div>{post.frontmatter.tags.map((item, i) => \n        <div key={i} className={linkStyles.blogtag}>\n          <GoTag/>{item}\n        </div>)} */}\n      </div> \n  )\n}\nexport default BookList","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport BookList from \"../components/books/book-list\"\nimport { graphql } from \"gatsby\"\n// import classnames from 'classnames';\n\nconst BooksPage = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) => {\n  const Books = edges\n    .filter(edge => !!edge.node.frontmatter.date) // You can filter your posts based on some criteria\n    .map(edge => <BookList key={edge.node.id} post={edge.node} type={\"book\"}/>)\n\n    return(\n      <Layout \n        title=\"My Bookshelf\" \n        icon=\"books\"\n        quote=\"Some books are to be tasted, others to be swallowed, and some few to be chewed and digested\"\n        quote_author=\"Francis Bacon\"\n      >\n        <SEO title=\"Book Notes\" />\n        <div className=\"mainContainer\">\n          <p>I love to read across all genres: non-fiction, fiction, poetry, biography, memoir, history, and science. Here are my notes and thoughts on some of my recent favorite reads.</p>\n          <hr/>\n          {<div style={{marginBottom:`4rem`}}>\n            {Books}\n          </div>}\n        </div>\n      </Layout>\n    )\n}\n\nexport default BooksPage\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n        sort: { order: DESC, fields: [frontmatter___date] },\n        filter: { frontmatter: {posttype: {in: \"books\"}} }\n      ) {\n    edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"YYYY-MM-DD\")\n            path\n            tags\n            author\n            description\n            rating\n          }\n        }\n      }\n    }\n  }\n`"],"names":["title","book_post_container","book_title_container","book_title_link_cell","read_more","author_date_container","book_rating","book_date_divider","props","post","className","bookStyles","Link","to","frontmatter","path","activeClassName","rating","toFixed","author","date","description","Books","data","allMarkdownRemark","edges","filter","edge","node","map","key","id","type","icon","quote","quote_author","style","marginBottom"],"sourceRoot":""}