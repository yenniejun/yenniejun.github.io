{"version":3,"sources":["webpack:///./src/components/posts/post-link.js","webpack:///./src/pages/writing.js"],"names":["PostLink","props","post","className","linkStyles","container","to","frontmatter","path","title","author","type","date","description","tags","map","item","i","key","blogtag","WritingPage","Posts","data","allMarkdownRemark","edges","edge","node","id","console","log","icon","quote","quote_author","href","target","rel","style","marginBottom","pageQuery"],"mappings":"8FAAA,sEA+BeA,IA1BE,SAACC,GAAW,IACnBC,EAASD,EAATC,KAER,OACE,yBAAKC,UAAWC,IAAWC,WACzB,kBAAC,OAAD,CAAMC,GAAIJ,EAAKK,YAAYC,MACzB,yBAAKL,UAAWC,IAAWK,OAAQP,EAAKK,YAAYE,UAGnDP,EAAKK,YAAYG,QAAU,yBAAKP,UAAWC,IAAWM,QAA3B,OAAwCR,EAAKK,YAAYG,QAEvE,SAAfT,EAAMU,MACL,yBAAKR,UAAWC,IAAWQ,MAA3B,YAA2CV,EAAKK,YAAYK,QAK3DV,EAAKK,YAAYM,aAAe,6BAAMX,EAAKK,YAAYM,aAC1D,6BAAMX,EAAKK,YAAYO,KAAKC,KAAI,SAACC,EAAMC,GAAP,OAC9B,yBAAKC,IAAKD,EAAGd,UAAWC,IAAWe,SACjC,kBAAC,IAAD,MAASH,U,kCCzBnB,8GAsCeI,UAhCK,SAAC,GAId,IACCC,EADF,EAHJC,KACEC,kBAAqBC,MAKpBT,KAAI,SAAAU,GAAI,OAAI,kBAAC,IAAD,CAAUP,IAAKO,EAAKC,KAAKC,GAAIzB,KAAMuB,EAAKC,KAAMf,KAAM,YAIjE,OAFAiB,QAAQC,IAAIR,GAGV,kBAAC,IAAD,CACEZ,MAAM,mBACNqB,KAAK,QACLC,MAAM,kCACNC,aAAa,qBAEf,kBAAC,IAAD,CAAKvB,MAAM,YACX,yBAAKN,UAAU,iBAEf,wLACyC,uBAAG8B,KAAK,iCAAiCC,OAAO,SAASC,IAAI,cAA7D,UADzC,KAGI,6BAEE,yBAAKC,MAAO,CAACC,aAAa,SAAUhB,MAQzC,IAAMiB,EAAS","file":"component---src-pages-writing-js-a53d16b47fe0ded65ef6.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport linkStyles from \"./post-link.module.css\"\nimport { GoTag } from 'react-icons/go'\n\nconst PostLink = (props) => {\n  const { post } = props;\n\n  return (\n    <div className={linkStyles.container}>\n      <Link to={post.frontmatter.path}>\n        <div className={linkStyles.title}>{post.frontmatter.title}</div>\n      </Link>\n      \n      {!!post.frontmatter.author && <div className={linkStyles.author}>By: {post.frontmatter.author}</div>}\n      \n      {props.type === \"blog\" && \n        <div className={linkStyles.date}>Written: {post.frontmatter.date}</div>}\n      \n      {/* {props.type == \"book\" && \n        <div className={linkStyles.date}>Finished: {post.frontmatter.date}</div>} */}\n      \n      {!!post.frontmatter.description && <div>{post.frontmatter.description}</div>}\n      <div>{post.frontmatter.tags.map((item, i) => \n        <div key={i} className={linkStyles.blogtag}>\n          <GoTag/>{item}\n        </div>)}\n      </div>\n    </div>\n  )\n}\nexport default PostLink","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport PostLink from \"../components/posts/post-link\"\nimport { graphql } from \"gatsby\"\n\nconst WritingPage = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) => {\n  const Posts = edges\n    // .filter(edge => !!edge.node.frontmatter.date) // You can filter your posts based on some criteria\n    .map(edge => <PostLink key={edge.node.id} post={edge.node} type={\"blog\"}/>)\n\n    console.log(Posts)\n  \n    return(\n      <Layout \n        title=\"Creative Writing\" \n        icon=\"quill\"\n        quote=\"I write to discover what I know\"\n        quote_author=\"Flannery O'Connor\"\n      >\n      <SEO title=\"Writing\" />\n      <div className=\"mainContainer\">\n  \n      <p>I like to write across genres and styles: fiction short stories, nonfiction short stories, poetry, and opinion pieces.\n            Some of my writing is published on <a href=\"https://medium.com/@yennie.jun\" target=\"_blank\" rel=\"noreferrer\">Medium</a>.</p>\n          \n          <hr/>\n          {/* <p>More coming soon!</p> */}\n          { <div style={{marginBottom:`4rem`}}>{Posts}</div>}\n        </div>\n      </Layout>\n    )\n}\n\nexport default WritingPage\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] },\n      filter: { frontmatter: {posttype: {in: \"blog\"}} }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            tags\n            description\n          }\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}