{"version":3,"sources":["webpack:///./src/components/posts/post-link.js","webpack:///./src/pages/books.js"],"names":["PostLink","props","post","className","linkStyles","container","to","frontmatter","path","title","author","type","date","description","tags","map","item","i","key","blogtag","BooksPage","Posts","data","allMarkdownRemark","edges","filter","edge","node","id","icon","quote","quote_author","style","marginBottom","pageQuery"],"mappings":"8FAAA,sEA+BeA,IA1BE,SAACC,GAAW,IACnBC,EAASD,EAATC,KAER,OACE,yBAAKC,UAAWC,IAAWC,WACzB,kBAAC,OAAD,CAAMC,GAAIJ,EAAKK,YAAYC,MACzB,yBAAKL,UAAWC,IAAWK,OAAQP,EAAKK,YAAYE,UAGnDP,EAAKK,YAAYG,QAAU,yBAAKP,UAAWC,IAAWM,QAA3B,OAAwCR,EAAKK,YAAYG,QAEvE,SAAfT,EAAMU,MACL,yBAAKR,UAAWC,IAAWQ,MAA3B,YAA2CV,EAAKK,YAAYK,QAK3DV,EAAKK,YAAYM,aAAe,6BAAMX,EAAKK,YAAYM,aAC1D,6BAAMX,EAAKK,YAAYO,KAAKC,KAAI,SAACC,EAAMC,GAAP,OAC9B,yBAAKC,IAAKD,EAAGd,UAAWC,IAAWe,SACjC,kBAAC,IAAD,MAASH,U,kCCzBnB,8GAiCeI,UA1BG,SAAC,GAIZ,IACCC,EADF,EAHJC,KACEC,kBAAqBC,MAIpBC,QAAO,SAAAC,GAAI,QAAMA,EAAKC,KAAKpB,YAAYK,QACvCG,KAAI,SAAAW,GAAI,OAAI,kBAAC,IAAD,CAAUR,IAAKQ,EAAKC,KAAKC,GAAI1B,KAAMwB,EAAKC,KAAMhB,KAAM,YAEjE,OACE,kBAAC,IAAD,CACEF,MAAM,QACNoB,KAAK,QACLC,MAAM,8FACNC,aAAa,iBAEb,kBAAC,IAAD,CAAKtB,MAAM,UACX,yBAAKN,UAAU,iBACb,2MACA,6BACC,yBAAK6B,MAAO,CAACC,aAAa,SAAUZ,MAQxC,IAAMa,EAAS","file":"component---src-pages-books-js-db4d5f466f3cccc32a7a.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport linkStyles from \"./post-link.module.css\"\nimport { GoTag } from 'react-icons/go'\n\nconst PostLink = (props) => {\n  const { post } = props;\n\n  return (\n    <div className={linkStyles.container}>\n      <Link to={post.frontmatter.path}>\n        <div className={linkStyles.title}>{post.frontmatter.title}</div>\n      </Link>\n      \n      {!!post.frontmatter.author && <div className={linkStyles.author}>By: {post.frontmatter.author}</div>}\n      \n      {props.type === \"blog\" && \n        <div className={linkStyles.date}>Written: {post.frontmatter.date}</div>}\n      \n      {/* {props.type == \"book\" && \n        <div className={linkStyles.date}>Finished: {post.frontmatter.date}</div>} */}\n      \n      {!!post.frontmatter.description && <div>{post.frontmatter.description}</div>}\n      <div>{post.frontmatter.tags.map((item, i) => \n        <div key={i} className={linkStyles.blogtag}>\n          <GoTag/>{item}\n        </div>)}\n      </div>\n    </div>\n  )\n}\nexport default PostLink","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport PostLink from \"../components/posts/post-link\"\nimport { graphql } from \"gatsby\"\n// import classnames from 'classnames';\n\nconst BooksPage = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) => {\n  const Posts = edges\n    .filter(edge => !!edge.node.frontmatter.date) // You can filter your posts based on some criteria\n    .map(edge => <PostLink key={edge.node.id} post={edge.node} type={\"book\"}/>)\n\n    return(\n      <Layout \n        title=\"Books\" \n        icon=\"books\"\n        quote=\"Some books are to be tasted, others to be swallowed, and some few to be chewed and digested\"\n        quote_author=\"Francis Bacon\"\n      >\n        <SEO title=\"Books\" />\n        <div className=\"mainContainer\">\n          <p>I love to read across all genres: non-fiction, fiction, poetry, biography, memoir, history, and science. Here are my notes and thoughts on some of my recent favorite reads.</p>\n          <hr/>\n          {<div style={{marginBottom:`4rem`}}>{Posts}</div>}\n        </div>\n      </Layout>\n    )\n}\n\nexport default BooksPage\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n        sort: { order: DESC, fields: [frontmatter___date] },\n        filter: { frontmatter: {posttype: {in: \"books\"}} }\n      ) {\n    edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            tags\n            author\n            description\n          }\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}