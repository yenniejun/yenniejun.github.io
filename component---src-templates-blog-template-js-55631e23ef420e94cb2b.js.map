{"version":3,"file":"component---src-templates-blog-template-js-55631e23ef420e94cb2b.js","mappings":"oNACWA,EAAgB,4CAChBC,EAAa,yCACbC,EAAW,uCACXC,EAAkB,8CAClBC,EAAa,yCACbC,EAAY,wCCAR,SAASC,EAAQC,GAAY,IAAX,KAAEC,GAAMD,EACvC,IAAKC,IAASA,EAAKC,eAEjB,OADAC,QAAQC,MAAM,iDAEZC,EAAAA,cAACC,EAAAA,EAAM,KACLD,EAAAA,cAACE,EAAAA,EAAG,CAACC,MAAM,mBACXH,EAAAA,cAAA,OAAKI,UAAWC,GACdL,EAAAA,cAAA,UAAI,kBACJA,EAAAA,cAAA,SAAG,0DAMX,MAAM,eAAEH,GAAmBD,GACrB,YAAEU,EAAW,KAAEC,GAASV,EAE9B,OACEG,EAAAA,cAACC,EAAAA,EAAM,KACLD,EAAAA,cAACE,EAAAA,EAAG,CAACC,MAAOG,EAAYH,QACxBH,EAAAA,cAAA,OAAKI,UAAWC,GACY,SAAzBC,EAAYE,UACXR,EAAAA,cAAA,OAAKI,UAAWC,GACdL,EAAAA,cAAA,UAAKM,EAAYH,OACjBH,EAAAA,cAAA,WAAK,YAAUM,EAAYG,OAIL,UAAzBH,EAAYE,UACXR,EAAAA,cAAA,OAAKI,UAAWC,GACdL,EAAAA,cAAA,UAAKM,EAAYH,OACjBH,EAAAA,cAAA,SAAOI,UAAWC,GAChBL,EAAAA,cAAA,aACEA,EAAAA,cAAA,UACEA,EAAAA,cAAA,UAAI,UACJA,EAAAA,cAAA,UAAKM,EAAYI,SAEnBV,EAAAA,cAAA,UACEA,EAAAA,cAAA,UAAI,YACJA,EAAAA,cAAA,UAAKM,EAAYG,OAEnBT,EAAAA,cAAA,UACEA,EAAAA,cAAA,UAAI,UACJA,EAAAA,cAAA,UAAKM,EAAYK,OAAS,GAAGL,EAAYK,OAAOC,QAAQ,SAAW,UAIxEN,EAAYO,MACXb,EAAAA,cAAA,SACEA,EAAAA,cAAA,KAAGc,KAAMR,EAAYO,KAAME,OAAO,SAASC,IAAI,cAAa,oBAMpEhB,EAAAA,cAAA,MAAII,UAAWC,IACfL,EAAAA,cAAA,OACEI,UAAWC,EACXY,wBAAyB,CAAEC,OAAQX,MAK7C,C","sources":["webpack://gatsby-starter-default/./src/templates/blogTemplate.module.css","webpack://gatsby-starter-default/./src/templates/blogTemplate.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var blogContainer = \"blogTemplate-module--blogContainer--26d52\";\nexport var blogHeader = \"blogTemplate-module--blogHeader--49fc3\";\nexport var blogLine = \"blogTemplate-module--blogLine--2a74c\";\nexport var blogPostContent = \"blogTemplate-module--blogPostContent--bea63\";\nexport var bookHeader = \"blogTemplate-module--bookHeader--04175\";\nexport var bookTable = \"blogTemplate-module--bookTable--30b6f\";","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport * as templateStyles from './blogTemplate.module.css' \n\nexport default function Template({ data }) {\n  if (!data || !data.markdownRemark) {\n    console.error('No data or markdownRemark found for this page')\n    return (\n      <Layout>\n        <SEO title=\"Post Not Found\" />\n        <div className={templateStyles.blogContainer}>\n          <h1>Post Not Found</h1>\n          <p>Sorry, the content you're looking for doesn't exist.</p>\n        </div>\n      </Layout>\n    )\n  }\n\n  const { markdownRemark } = data\n  const { frontmatter, html } = markdownRemark\n  \n  return (\n    <Layout>\n      <SEO title={frontmatter.title} />\n      <div className={templateStyles.blogContainer}>\n        {frontmatter.posttype === \"blog\" && (\n          <div className={templateStyles.blogHeader}>\n            <h1>{frontmatter.title}</h1>\n            <div>Written: {frontmatter.date}</div>\n          </div>\n        )}\n\n        {frontmatter.posttype === \"books\" && (\n          <div className={templateStyles.bookHeader}>\n            <h1>{frontmatter.title}</h1>\n            <table className={templateStyles.bookTable}>\n              <tbody>\n                <tr>\n                  <td>Author</td>\n                  <td>{frontmatter.author}</td>\n                </tr>\n                <tr>\n                  <td>Finished</td>\n                  <td>{frontmatter.date}</td>\n                </tr>\n                <tr>\n                  <td>Rating</td>\n                  <td>{frontmatter.rating ? `${frontmatter.rating.toFixed(1)} / 5` : 'N/A'}</td>\n                </tr>\n              </tbody>\n            </table>\n            {frontmatter.link && (\n              <p>\n                <a href={frontmatter.link} target=\"_blank\" rel=\"noreferrer\">Goodreads link</a>\n              </p>\n            )}\n          </div>\n        )}     \n        \n        <hr className={templateStyles.blogLine}/>\n        <div\n          className={templateStyles.blogPostContent}\n          dangerouslySetInnerHTML={{ __html: html }}\n        />\n      </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query BlogPostByPath($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date(formatString: \"YYYY-MM-DD\")\n        path\n        title\n        author\n        posttype\n        link\n        rating\n      }\n    }\n  }\n`"],"names":["blogContainer","blogHeader","blogLine","blogPostContent","bookHeader","bookTable","Template","_ref","data","markdownRemark","console","error","React","Layout","SEO","title","className","templateStyles","frontmatter","html","posttype","date","author","rating","toFixed","link","href","target","rel","dangerouslySetInnerHTML","__html"],"sourceRoot":""}