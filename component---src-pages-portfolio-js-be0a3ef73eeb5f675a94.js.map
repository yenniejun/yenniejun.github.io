{"version":3,"file":"component---src-pages-portfolio-js-be0a3ef73eeb5f675a94.js","mappings":"6RA4FA,EAjFuB,SAACA,GACpB,OACE,gCACE,uBAAKC,UAAWC,EAAAA,QAAAA,MAAmBC,MAAO,CAACC,gBAAiBJ,EAAMK,QAG9D,uBAAKJ,UAAWC,EAAAA,QAAAA,cACbF,EAAMM,OAASN,EAAMM,MAAMC,MAC5B,uBAAKN,UAAWC,EAAAA,QAAAA,sBACd,gBAAC,IAAD,CACED,UAAWC,EAAAA,QAAAA,YACXM,MAAOR,EAAMM,MAAMC,KAAKE,gBAAgBD,MACxCE,IAAK,YAAcV,EAAMM,MAAMC,KAAKI,QAMxC,2BACE,0BAAKX,EAAMY,KAAKC,OACfb,EAAMY,KAAKE,MACV,2BAAMd,EAAMY,KAAKE,KAAKC,KAAI,SAACC,EAAMC,GAAP,OACxB,uBAAKC,IAAKD,EAAGhB,UAAWkB,EAAAA,QAAAA,SACtB,gBAAC,MAAD,MAASH,SASnB,2BACChB,EAAMY,KAAKQ,aACVpB,EAAMY,KAAKQ,YAAYL,KAAI,SAACC,EAAMC,GAAP,OACzB,qBAAGC,IAAKD,GAAID,MAIfhB,EAAMY,KAAKS,cACV,0BAAKrB,EAAMY,KAAKS,cAGlB,uBAAKpB,UAAWC,EAAAA,QAAAA,mBACbF,EAAMY,KAAKU,WACV,qBAAGrB,UAAWC,EAAAA,QAAAA,SAAsBqB,KAAMvB,EAAMY,KAAKU,UAAWE,OAAO,SAASC,IAAI,cAClF,gBAAC,MAAD,MACA,8CAIHzB,EAAMY,KAAKc,aACR,qBAAGzB,UAAWC,EAAAA,QAAAA,SAAsBqB,KAAMvB,EAAMY,KAAKc,YAAaF,OAAO,SAASC,IAAI,cACpF,gBAAC,MAAD,MACA,gDAILzB,EAAMY,KAAKe,UACV,qBAAG1B,UAAWC,EAAAA,QAAAA,SAAsBqB,KAAMvB,EAAMY,KAAKe,SAAUH,OAAO,SAASC,IAAI,cACjF,gBAAC,MAAD,MACA,6CAIHzB,EAAMY,KAAKgB,UACV,qBAAG3B,UAAWC,EAAAA,QAAAA,SAAsBqB,KAAMvB,EAAMY,KAAKgB,SAAUJ,OAAO,SAASC,IAAI,cACjF,gBAAC,MAAD,MACA,iD,0wLCzBlB,EA/CsB,WACpB,IAAMI,GAAQC,EAAAA,EAAAA,gBAAe,cAoB7B,OAAO,gBAAC,IAAD,CACLjB,MAAM,WACNkB,KAAK,WACLC,MAAM,6CACNC,aAAa,sBAGb,gBAAC,IAAD,CAAKpB,MAAM,cACX,uBAAKZ,UAAU,iBACb,mHAEA,2BAEIiC,EAAAA,KAAkB,SAAClB,EAAMC,GAAP,OACd,gBAAC,EAAD,CACEC,IAAKD,EACLZ,MAAS,UACTO,KAAMI,EACNV,MAAOuB,EAAMM,OAAOC,MAAMC,MAAK,SAAAC,GAAC,OAAIA,EAAE/B,KAAKI,OAASK,EAAKV","sources":["webpack://gatsby-starter-default/./src/components/portfolio/panel.js","webpack://gatsby-starter-default/./src/pages/portfolio.js"],"sourcesContent":["// Gatsby supports TypeScript natively!\nimport React from \"react\"\nimport Img from 'gatsby-image';\nimport panelStyles from \"./panel.module.css\"\nimport linkStyles from \"./../posts/post-link.module.css\"\nimport { FaGithub } from 'react-icons/fa'\nimport { IoIosPaper } from 'react-icons/io'\nimport { RiArticleLine } from 'react-icons/ri'\nimport { GiClick } from 'react-icons/gi'\nimport { GoTag } from 'react-icons/go'\n\nconst PortfolioPanel = (props) => {\n    return (\n      <>\n        <div className={panelStyles.panel} style={{backgroundColor: props.color}}>\n\n\n            <div className={panelStyles.projectTitle}>\n              {props.image && props.image.node &&\n              <div className={panelStyles.projectIconContainer}>\n                <Img \n                  className={panelStyles.projectIcon}\n                  fluid={props.image.node.childImageSharp.fluid}\n                  alt={\"image for\" + props.image.node.base}\n                />\n\n              </div>\n                \n              } \n              <div>\n                <h2>{props.data.title}</h2> \n                {props.data.tags && \n                  <div>{props.data.tags.map((item, i) => \n                    <div key={i} className={linkStyles.blogtag}>\n                      <GoTag/>{item}\n                    </div>)}\n                  </div>\n                }\n              </div>\n            </div>\n            \n\n            \n            <hr/>\n            {props.data.description && \n              props.data.description.map((item, i) =>\n                <p key={i}>{item}</p>\n              )\n            } \n\n            {props.data.announcement && \n              <h3>{props.data.announcement}</h3>\n            }\n\n            <div className={panelStyles.codelinkContainer}>\n              {props.data.paperlink &&\n                <a className={panelStyles.codelink} href={props.data.paperlink} target=\"_blank\" rel=\"noreferrer\">\n                  <IoIosPaper />\n                  <span>Link to paper</span>\n                </a>\n              }\n\n              {props.data.articlelink &&\n                  <a className={panelStyles.codelink} href={props.data.articlelink} target=\"_blank\" rel=\"noreferrer\">\n                    <RiArticleLine />\n                    <span>Link to article</span>\n                  </a>\n                }\n\n              {props.data.demolink &&\n                <a className={panelStyles.codelink} href={props.data.demolink} target=\"_blank\" rel=\"noreferrer\">\n                  <GiClick />\n                  <span>Link to demo</span>\n                </a>\n              }\n\n              {props.data.codelink &&\n                <a className={panelStyles.codelink} href={props.data.codelink} target=\"_blank\" rel=\"noreferrer\">\n                  <FaGithub/>\n                  <span>Link to code</span>\n                </a>\n              } \n            </div>\n\n            \n\n            \n        </div>\n      </>\n    )\n  }\n  \nexport default PortfolioPanel;\n","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport PortfolioPanel from \"../components/portfolio/panel\"\nimport SEO from \"../components/seo\"\nimport portfolioData from \"../data/portfolio.json\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst PortfolioPage = () => {\n  const query = useStaticQuery(graphql`\n    query {\n      images: allFile(filter: {\n        relativeDirectory: {eq: \"projects\"}\n      }) {\n        edges {\n          node { \n            base\n            id\n            childImageSharp {\n              fluid(maxWidth: 500, maxHeight: 500) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  return <Layout \n    title=\"Projects\" \n    icon=\"computer\"\n    quote=\"Learning is movement from moment to moment\"\n    quote_author=\"Jiddu Krishnamurti\"\n    >\n              \n    <SEO title=\"Portfolio\" />\n    <div className=\"mainContainer\">\n      <p>I'm always trying to learn new things!\n      Here are some of my current or recent projects.</p>\n      <hr />\n        {\n          portfolioData.map((item, i) =>\n              <PortfolioPanel \n                key={i} \n                color = {\"#f9f9f9\"}\n                data={item}\n                image={query.images.edges.find(n => n.node.base === item.image)}\n              />\n            )\n          }\n    </div>\n  </Layout>\n}\n\nexport default PortfolioPage\n"],"names":["props","className","panelStyles","style","backgroundColor","color","image","node","fluid","childImageSharp","alt","base","data","title","tags","map","item","i","key","linkStyles","description","announcement","paperlink","href","target","rel","articlelink","demolink","codelink","query","useStaticQuery","icon","quote","quote_author","portfolioData","images","edges","find","n"],"sourceRoot":""}