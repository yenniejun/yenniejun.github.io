{"version":3,"file":"component---src-pages-books-js-c80ba8517a9bd7e55be2.js","mappings":"sVACWA,EAAQ,iCACRC,EAAuB,gDAGvBC,EAAc,uCAEdC,EAAY,qCCmCvB,EApCiB,SAACC,GAChB,IAAQC,EAASD,EAATC,KAER,OACE,0BACI,sBAAIC,UAAWC,GACX,gBAAC,EAAAC,KAAD,CAAMC,GAAIJ,EAAKK,YAAYC,KAAMC,gBAAiBL,EAAAA,QAC9C,uBAAKD,UAAWC,GAAmBF,EAAKK,YAAYV,SAI5D,sBAAIM,UAAWC,EAAAA,eACRF,EAAKK,YAAYG,QAAU,2BAAMR,EAAKK,YAAYG,SAGzD,sBAAIP,UAAWC,GACVF,EAAKK,YAAYI,MAGtB,sBAAIR,UAAWC,GACZF,EAAKK,YAAYK,OAAOC,QAAQ,GAAK,UCmBhD,EAtCkB,SAAC,GAIZ,IACCC,EADF,EAHJC,KACEC,kBAAqBC,MAIpBC,QAAO,SAAAC,GAAI,QAAMA,EAAKC,KAAKb,YAAYI,QACvCU,KAAI,SAAAF,GAAI,OAAI,gBAAC,EAAD,CAAUG,IAAKH,EAAKC,KAAKG,GAAIrB,KAAMiB,EAAKC,KAAMI,KAAM,YAEjE,OACE,gBAAC,IAAD,CACE3B,MAAM,eACN4B,KAAK,QACLC,MAAM,8FACNC,aAAa,iBAEb,gBAAC,IAAD,CAAK9B,MAAM,eACX,uBAAKM,UAAU,iBACb,yMACA,2BACC,uBAAKyB,MAAO,CAACC,aAAa,SACzB,6BACE,6BACE,0BACE,mCACA,oCACA,sBAAI1B,UAAU,sBAAd,iBACA,sBAAIA,UAAU,sBAAd,YAGHW","sources":["webpack://gatsby-starter-default/./src/components/books/book-list.module.css","webpack://gatsby-starter-default/./src/components/books/book-list.js","webpack://gatsby-starter-default/./src/pages/books.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var title = \"book-list-module--title--1BBZ8\";\nexport var book_title_link_cell = \"book-list-module--book_title_link_cell--1SUDx\";\nexport var author = \"book-list-module--author--2hr62\";\nexport var date = \"book-list-module--date--2cigP\";\nexport var book_rating = \"book-list-module--book_rating--2Rvly\";\nexport var blogtag = \"book-list-module--blogtag--2w393\";\nexport var book_date = \"book-list-module--book_date--xybm4\";","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport * as bookStyles from \"./book-list.module.css\"\nimport { GoTag } from 'react-icons/go'\n\n\nconst BookList = (props) => {\n  const { post } = props;\n\n  return (\n    <tr >\n        <td className={bookStyles.book_title_link_cell}>\n            <Link to={post.frontmatter.path} activeClassName={bookStyles.active}>\n                <div className={bookStyles.title}>{post.frontmatter.title}</div>\n            </Link>\n        </td>\n        \n        <td className={bookStyles.book_author}>\n            {!!post.frontmatter.author && <div>{post.frontmatter.author}</div>}\n        </td>\n\n        <td className={bookStyles.book_date}>\n            {post.frontmatter.date}\n        </td>\n \n        <td className={bookStyles.book_rating}>\n          {post.frontmatter.rating.toFixed(1) + \" / 5\"}\n        </td>\n\n       \n      {/* {props.type == \"book\" && \n        <div className={linkStyles.date}>Finished: {post.frontmatter.date}</div>} */}\n      \n      {/* {!!post.frontmatter.description && <div>{post.frontmatter.description}</div>}\n      <div>{post.frontmatter.tags.map((item, i) => \n        <div key={i} className={linkStyles.blogtag}>\n          <GoTag/>{item}\n        </div>)}\n      </div> */}\n    </tr>\n  )\n}\nexport default BookList","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport BookList from \"../components/books/book-list\"\nimport { graphql } from \"gatsby\"\n// import classnames from 'classnames';\n\nconst BooksPage = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) => {\n  const Books = edges\n    .filter(edge => !!edge.node.frontmatter.date) // You can filter your posts based on some criteria\n    .map(edge => <BookList key={edge.node.id} post={edge.node} type={\"book\"}/>)\n\n    return(\n      <Layout \n        title=\"My Bookshelf\" \n        icon=\"books\"\n        quote=\"Some books are to be tasted, others to be swallowed, and some few to be chewed and digested\"\n        quote_author=\"Francis Bacon\"\n      >\n        <SEO title=\"Book Notes\" />\n        <div className=\"mainContainer\">\n          <p>I love to read across all genres: non-fiction, fiction, poetry, biography, memoir, history, and science. Here are my notes and thoughts on some of my recent favorite reads.</p>\n          <hr/>\n          {<div style={{marginBottom:`4rem`}}>\n            <table>\n              <thead>\n                <tr>\n                  <th>Title</th>\n                  <th>Author</th>\n                  <th className=\"hide_header_column\">Date Finished</th>\n                  <th className=\"hide_header_column\">Rating</th>\n                </tr>\n              </thead>\n              {Books}\n            </table>\n          </div>}\n        </div>\n      </Layout>\n    )\n}\n\nexport default BooksPage\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n        sort: { order: DESC, fields: [frontmatter___date] },\n        filter: { frontmatter: {posttype: {in: \"books\"}} }\n      ) {\n    edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"YYYY-MM-DD\")\n            path\n            tags\n            author\n            description\n            rating\n          }\n        }\n      }\n    }\n  }\n`"],"names":["title","book_title_link_cell","book_rating","book_date","props","post","className","bookStyles","Link","to","frontmatter","path","activeClassName","author","date","rating","toFixed","Books","data","allMarkdownRemark","edges","filter","edge","node","map","key","id","type","icon","quote","quote_author","style","marginBottom"],"sourceRoot":""}